<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="init();">
    <s:layout>
        <s:VerticalLayout/>
    </s:layout>

    <fx:Script>
      <![CDATA[
            import flash.events.ActivityEvent;
            import flash.events.StatusEvent;
            import flash.media.Microphone;
            import flash.media.Sound;
            import flash.media.SoundChannel;
            import flash.utils.ByteArray;
            import flash.utils.Timer;
            import flash.events.TimerEvent;
            import flash.events.Event;
            import flash.events.SampleDataEvent;


            private var DELAY_LENGTH:int;
            private var mic:Microphone;
            private var timer:Timer;
            private var soundBytes:ByteArray = new ByteArray();
            private var sound:Sound;
            private var channel:SoundChannel;

            private function init():void {
                DELAY_LENGTH = 5000;
                mic = Microphone.getMicrophone();
                mic.setSilenceLevel(0, DELAY_LENGTH);
                mic.gain = 100;
                mic.rate = 44;

                timer = new Timer(DELAY_LENGTH);
                timer.addEventListener(TimerEvent.TIMER, timerHandler);

                record_btn.label += " for " + DELAY_LENGTH/1000 + " sec";
            }

            public function startRecording():void {
                record_btn.enabled = false;
                soundBytes.clear();
                timer.start();
                mic.addEventListener(SampleDataEvent.SAMPLE_DATA, micSampleDataHandler);
                textarea.text += "Recording ... ";
            }

            private function micSampleDataHandler(event:SampleDataEvent):void
            {
                while(event.data.bytesAvailable)
                {
                    var sample:Number = event.data.readFloat();
                    soundBytes.writeFloat(sample);
                }
            }

            private function timerHandler(event:TimerEvent):void
            {
                mic.removeEventListener(SampleDataEvent.SAMPLE_DATA, micSampleDataHandler);
                timer.stop();
                timer.reset();
                soundBytes.position = 0;
                sound = new Sound();
                sound.addEventListener(SampleDataEvent.SAMPLE_DATA, playbackSampleHandler);
                channel = new SoundChannel();
                channel = sound.play();
                textarea.text += "done.\nPlaying ... ";
            }

            private function playbackSampleHandler(event:SampleDataEvent):void
            {
                for (var i:int = 0; i < 8192 && soundBytes.bytesAvailable > 0; i ++) {
                    var sample:Number = soundBytes.readFloat();
                    event.data.writeFloat(sample);
                    event.data.writeFloat(sample);
                }

                if (soundBytes.bytesAvailable == 0)
                    playbackComplete();
            }

            private function playbackComplete():void
            {
                channel.stop();
                textarea.text += "done.\n";
                record_btn.enabled = true;
            }
        ]]>
    </fx:Script>

    <s:Button label="Record" click="startRecording();" id="record_btn" />
    <s:TextArea width="400" id="textarea" />
</s:Application>
